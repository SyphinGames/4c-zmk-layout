/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";
    };

    macros {
        codeFence: codeFence {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&kp GRAVE &kp GRAVE &kp GRAVE &kp RET &kp RET &kp GRAVE &kp GRAVE &kp GRAVE &kp UP>,
                <&macro_press>;
        };
        alt_f4: alt_f4 {
            compatible = "zmk,behavior-macro";
            label = "ALT_F4";
            #binding-cells = <0>;
            bindings = <&kp LALT &kp F4>;
        };
        Square_Root: Square_Root {
            compatible = "zmk,behavior-macro";
            label = "SQUARE_ROOT";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kp KP_NUMBER_2 &kp KP_NUMBER_5 &kp KP_NUMBER_1 &kt LEFT_ALT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp ESC           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4    &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp BACKSPACE
&kp TAB           &kp Q         &kp W         &kp D         &kp F           &kp Z           &kp SEMI      &kp U           &kp K         &kp Y         &kp P         &kp SQT
&kp LEFT_CONTROL  &kp A         &kp S         &kp E         &kp R           &kp L           &kp H         &kp N           &kp I         &kp O         &kp T         &kp ENTER
&kp LEFT_SHIFT    &kp COMMA     &kp X         &kp C         &kp V           &kp B           &kp QUESTION  &kp M           &kp J         &kp G         &kp PERIOD    &kp RIGHT_SHIFT
&to 3             &to 4         &kp SPACE     &kp LEFT_WIN  &kp LEFT_SHIFT                                &kp LEFT_SHIFT  &kp LEFT_ALT  &kp SPACE     &to 1         &to 2
            >;
        };

        RSE {
            bindings = <
&kp F1          &kp F2                             &kp F3           &kp F4          &kp F5          &kp F6                  &kp F7                 &kp F8          &kp F9        &kp F10       &kp F11     &kp F12
&kp TAB         &kp ESC                            &kp PAGE_UP      &kp UP_ARROW    &kp PAGE_DOWN   &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &bt BT_NXT      &bt BT_PRV    &bt BT_SEL 0  &bt BT_CLR  &kp BACKSLASH
&kp LEFT_SHIFT  &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT       &kp LEFT_BRACE          &kp RIGHT_BRACE        &kp C_PREV      &kp C_PP      &kp C_NEXT    &kp ESC     &trans
&kp LCTRL       &trans                             &kp C_VOLUME_UP  &kp C_VOL_DN    &kp K_MUTE      &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp K_MUTE      &kp C_VOL_DN  &kp C_VOL_UP  &trans      &trans
&to 3           &kp K_POWER                        &kp SPACE        &kp LEFT_GUI    &kp LEFT_SHIFT                                                 &kp LEFT_SHIFT  &kp LEFT_GUI  &kp SPACE     &to 0       &to 2
            >;
        };

        LWR {
            bindings = <
&kp F12    &kp F1             &kp F2        &kp F3            &kp F4        &kp F5                  &kp F6                 &kp F7        &kp F8        &kp F9        &kp F10           &kp F11
&kp HASH   &kp DOUBLE_QUOTES  &kp EQUAL     &kp COMMA         &Square_Root  &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &kp CARET     &kp SLASH     &kp ASTERISK  &kp SINGLE_QUOTE  &kp TAB
&kp ENTER  &kp NUMBER_2       &kp NUMBER_3  &kp NUMBER_4      &kp NUMBER_1  &kp NUMBER_5            &kp NUMBER_6           &kp NUMBER_0  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9      &kp ENTER
&kp LCTRL  &kp X              &kp Y         &kp M             &key_repeat   &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &key_repeat   &kp A         &kp B         &kp Z             &kp LSHFT
&to 3      &kp DOLLAR         &kp PLUS      &kp K_CALCULATOR  &kp SPACE                                                    &kp PERIOD    &kp LEFT_GUI  &kp MINUS     &to 1             &to 0
            >;
        };

        layer_4 {
            bindings = <
&kp ESCAPE  &kp NUMBER_1    &kp NUMBER_2  &kp T           &kp NUMBER_3      &kp NUMBER_4    &trans           &trans                                  &trans        &trans   &trans             &trans
&kp I       &kp TAB         &kp Q         &kp NUMBER_5    &kp E             &kp R           &trans           &trans                                  &trans        &trans   &trans             &trans
&kp O       &kp LEFT_SHIFT  &kp A         &kp W           &kp D             &kp F           &kp C_VOLUME_UP  &trans                                  &trans        &trans   &kp C_VOLUME_DOWN  &trans
&kp LCTRL   &kp Z           &kp X         &kp S           &kp C             &kp V           &trans           &trans                                  &trans        &trans   &trans             &trans
&to 0       &kp M           &kp SPACE     &kp C_SNAPSHOT  &kp LEFT_CONTROL                                   &kp C_AC_DESKTOP_SHOW_ALL_APPLICATIONS  &kp LEFT_WIN  &alt_f4  &to 1              &to 2
            >;
        };

        layer_5 {
            bindings = <
&kp ESC    &kp N1  &kp N2     &kp N3            &kp N4            &kp N5    &kp N6  &kp N7        &kp N8     &kp N9     &kp N0    &kp MINUS
&kp TAB    &kp Q   &kp W      &kp E             &kp R             &kp T     &kp Y   &kp U         &kp I      &kp O      &kp P     &kp RET
&kp LCTRL  &kp A   &kp S      &kp D             &kp F             &kp G     &kp H   &kp J         &kp K      &kp L      &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X      &kp C             &kp V             &kp B     &kp N   &kp M         &kp COMMA  &kp DOT    &kp FSLH  &kp RSHFT
&to 3      &to 0   &kp SPACE  &kp LS(CAPSLOCK)  &kp K_VOLUME_UP2                    &kp C_VOL_DN  &kp LWIN   &kp SPACE  &to 1     &to 2
            >;
        };
    };
};
